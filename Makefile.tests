# Makefile for Hyperliquid C SDK Tests
# Complete coverage of all 51 API methods

CC = gcc
CFLAGS = -std=c11 -Wall -Wextra -O2 -Iinclude -I/opt/homebrew/include
LDFLAGS = -L/opt/homebrew/lib
LIBS = -lsecp256k1 -lmsgpackc -lcurl -lcjson -lpthread -lm

# Directories
SRC_DIR = src
BUILD_DIR = build
TEST_DIR = tests
OBJ_DIR = $(BUILD_DIR)/obj
BIN_DIR = $(BUILD_DIR)/bin

# Source files
CORE_SRCS = $(wildcard $(SRC_DIR)/crypto/*.c) \
            $(wildcard $(SRC_DIR)/msgpack/*.c) \
            $(SRC_DIR)/http/client.c \
            $(SRC_DIR)/client.c \
            $(SRC_DIR)/trading_api.c \
            $(SRC_DIR)/account.c \
            $(SRC_DIR)/markets.c \
            $(SRC_DIR)/ticker.c \
            $(SRC_DIR)/orderbook.c

TEST_HELPER_SRCS = $(TEST_DIR)/helpers/test_common.c

# Object files
CORE_OBJS = $(patsubst $(SRC_DIR)/%.c,$(OBJ_DIR)/%.o,$(CORE_SRCS))
TEST_HELPER_OBJS = $(patsubst $(TEST_DIR)/%.c,$(OBJ_DIR)/test/%.o,$(TEST_HELPER_SRCS))

# Test categories
UNIT_TESTS = test_crypto_msgpack
INTEGRATION_TESTS = test_connection \
                    test_create_cancel_order \
                    test_fetch_balance \
                    test_fetch_positions \
                    test_fetch_markets \
                    test_fetch_ticker \
                    test_fetch_order_book \
                    test_fetch_ohlcv

.PHONY: all clean test test-unit test-integration test-priority help

# Default target
all: help

# Help
help:
	@echo "Hyperliquid C SDK - Test Suite"
	@echo ""
	@echo "Usage:"
	@echo "  make test                  Run all tests"
	@echo "  make test-unit             Run unit tests only"
	@echo "  make test-integration      Run integration tests only"
	@echo "  make test-priority         Run high priority tests only"
	@echo ""
	@echo "Categories:"
	@echo "  make test-market-data      Market data tests"
	@echo "  make test-account          Account & balance tests"
	@echo "  make test-trading          Trading & order tests"
	@echo "  make test-margin           Margin & leverage tests"
	@echo ""
	@echo "Individual tests:"
	@echo "  make test-<name>           Run specific test"
	@echo ""
	@echo "Utilities:"
	@echo "  make list-tests            List all available tests"
	@echo "  make test-report           Show coverage report"
	@echo "  make clean                 Clean build artifacts"

# List all tests
list-tests:
	@echo "Unit Tests:"
	@for test in $(UNIT_TESTS); do echo "  - $$test"; done
	@echo ""
	@echo "Integration Tests:"
	@for test in $(INTEGRATION_TESTS); do echo "  - $$test"; done

# Test report
test-report:
	@echo "╔════════════════════════════════════════╗"
	@echo "║  Hyperliquid C SDK - Test Coverage    ║"
	@echo "╚════════════════════════════════════════╝"
	@echo ""
	@echo "Phase 1 (Foundation):  1/4   (25%)  ⏳"
	@echo "Phase 2 (Connection):  1/1   (100%) ✅"
	@echo "Phase 3 (Trading):     1/2   (50%)  ⏳"
	@echo "Phase 4 (High Pri):    0/20  (0%)   📋"
	@echo "Phase 5 (Medium Pri):  0/18  (0%)   📌"
	@echo "Phase 6 (Low Pri):     0/6   (0%)   📌"
	@echo ""
	@echo "Total: 3/51 (5.9%)"
	@echo ""
	@echo "Next to implement:"
	@echo "  - test_fetch_balance"
	@echo "  - test_fetch_markets"
	@echo "  - test_fetch_positions"

# Compile object files
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c
	@mkdir -p $(dir $@)
	@echo "Compiling $<"
	@$(CC) $(CFLAGS) -c $< -o $@

$(OBJ_DIR)/test/%.o: $(TEST_DIR)/%.c
	@mkdir -p $(dir $@)
	@echo "Compiling $<"
	@$(CC) $(CFLAGS) -c $< -o $@

# Unit tests
$(BIN_DIR)/test_crypto_msgpack: $(TEST_DIR)/unit/test_crypto_msgpack.c $(CORE_OBJS) $(TEST_HELPER_OBJS)
	@mkdir -p $(BIN_DIR)
	@echo "Building $@"
	@$(CC) $(CFLAGS) $< $(CORE_OBJS) $(TEST_HELPER_OBJS) -o $@ $(LDFLAGS) $(LIBS)

test_crypto_msgpack: $(BIN_DIR)/test_crypto_msgpack
	@echo "Running test_crypto_msgpack..."
	@$(BIN_DIR)/test_crypto_msgpack

# Integration tests - Connection
$(BIN_DIR)/test_connection: $(TEST_DIR)/integration/01_connection/test_connection.c $(CORE_OBJS) $(TEST_HELPER_OBJS)
	@mkdir -p $(BIN_DIR)
	@echo "Building $@"
	@$(CC) $(CFLAGS) $< $(CORE_OBJS) $(TEST_HELPER_OBJS) -o $@ $(LDFLAGS) $(LIBS)

test_connection: $(BIN_DIR)/test_connection
	@echo "Running test_connection..."
	@$(BIN_DIR)/test_connection

# Integration tests - Trading
$(BIN_DIR)/test_create_cancel_order: $(TEST_DIR)/integration/04_trading/test_create_cancel_order.c $(CORE_OBJS) $(TEST_HELPER_OBJS)
	@mkdir -p $(BIN_DIR)
	@echo "Building $@"
	@$(CC) $(CFLAGS) $< $(CORE_OBJS) $(TEST_HELPER_OBJS) -o $@ $(LDFLAGS) $(LIBS)

test_create_cancel_order: $(BIN_DIR)/test_create_cancel_order
	@echo "Running test_create_cancel_order..."
	@$(BIN_DIR)/test_create_cancel_order

# Account tests
$(BIN_DIR)/test_fetch_balance: $(TEST_DIR)/integration/03_account/test_fetch_balance.c $(CORE_OBJS) $(TEST_HELPER_OBJS)
	@mkdir -p $(BIN_DIR)
	@echo "Building $@"
	@$(CC) $(CFLAGS) $< $(CORE_OBJS) $(TEST_HELPER_OBJS) -o $@ $(LDFLAGS) $(LIBS)

test_fetch_balance: $(BIN_DIR)/test_fetch_balance
	@echo "Running test_fetch_balance..."
	@$(BIN_DIR)/test_fetch_balance

$(BIN_DIR)/test_fetch_positions: $(TEST_DIR)/integration/03_account/test_fetch_positions.c $(CORE_OBJS) $(TEST_HELPER_OBJS)
	@mkdir -p $(BIN_DIR)
	@echo "Building $@"
	@$(CC) $(CFLAGS) $< $(CORE_OBJS) $(TEST_HELPER_OBJS) -o $@ $(LDFLAGS) $(LIBS)

test_fetch_positions: $(BIN_DIR)/test_fetch_positions
	@echo "Running test_fetch_positions..."
	@$(BIN_DIR)/test_fetch_positions

$(BIN_DIR)/test_fetch_markets: $(TEST_DIR)/integration/02_market_data/test_fetch_markets.c $(CORE_OBJS) $(TEST_HELPER_OBJS)
	@mkdir -p $(BIN_DIR)
	@echo "Building $@"
	@$(CC) $(CFLAGS) $< $(CORE_OBJS) $(TEST_HELPER_OBJS) -o $@ $(LDFLAGS) $(LIBS)

test_fetch_markets: $(BIN_DIR)/test_fetch_markets
	@echo "Running test_fetch_markets..."
	@$(BIN_DIR)/test_fetch_markets

$(BIN_DIR)/test_fetch_ticker: $(TEST_DIR)/integration/02_market_data/test_fetch_ticker.c $(CORE_OBJS) $(TEST_HELPER_OBJS)
	@mkdir -p $(BIN_DIR)
	@echo "Building $@"
	@$(CC) $(CFLAGS) $< $(CORE_OBJS) $(TEST_HELPER_OBJS) -o $@ $(LDFLAGS) $(LIBS)

test_fetch_ticker: $(BIN_DIR)/test_fetch_ticker
	@echo "Running test_fetch_ticker..."
	@$(BIN_DIR)/test_fetch_ticker

$(BIN_DIR)/test_fetch_order_book: $(TEST_DIR)/integration/02_market_data/test_fetch_order_book.c $(CORE_OBJS) $(TEST_HELPER_OBJS)
	@mkdir -p $(BIN_DIR)
	@echo "Building $@"
	@$(CC) $(CFLAGS) $< $(CORE_OBJS) $(TEST_HELPER_OBJS) -o $@ $(LDFLAGS) $(LIBS)

test_fetch_order_book: $(BIN_DIR)/test_fetch_order_book
	@echo "Running test_fetch_order_book..."
	@$(BIN_DIR)/test_fetch_order_book

test_fetch_ohlcv:
	@echo "❌ test_fetch_ohlcv not yet implemented"
	@echo "   Location: tests/integration/02_market_data/test_fetch_ohlcv.c"

# Test suites
test-unit: test_crypto_msgpack
	@echo ""
	@echo "✅ All unit tests passed"

test-integration: test_connection test_create_cancel_order
	@echo ""
	@echo "✅ All integration tests passed"

test-priority: test-integration test_fetch_balance test_fetch_markets
	@echo ""
	@echo "High priority tests completed"

test-market-data: test_fetch_markets test_fetch_ticker test_fetch_order_book test_fetch_ohlcv
	@echo ""
	@echo "Market data tests completed"

test-account: test_fetch_balance test_fetch_positions
	@echo ""
	@echo "Account tests completed"

test-trading: test_create_cancel_order test_fetch_order test_fetch_orders test_fetch_open_orders
	@echo ""
	@echo "Trading tests completed"

test: test-unit test-integration
	@echo ""
	@echo "════════════════════════════════════════"
	@echo "✅ ALL TESTS PASSED"
	@echo "════════════════════════════════════════"

# Example programs
$(BIN_DIR)/example_balance: examples/simple_balance.c $(CORE_OBJS) $(TEST_HELPER_OBJS)
	@mkdir -p $(BIN_DIR)
	@echo "Building $@"
	@$(CC) $(CFLAGS) $< $(CORE_OBJS) $(TEST_HELPER_OBJS) -o $@ $(LDFLAGS) $(LIBS)

example_balance: $(BIN_DIR)/example_balance
	@echo "Running example_balance..."
	@$(BIN_DIR)/example_balance

$(BIN_DIR)/example_positions: examples/simple_positions.c $(CORE_OBJS) $(TEST_HELPER_OBJS)
	@mkdir -p $(BIN_DIR)
	@echo "Building $@"
	@$(CC) $(CFLAGS) $< $(CORE_OBJS) $(TEST_HELPER_OBJS) -o $@ $(LDFLAGS) $(LIBS)

example_positions: $(BIN_DIR)/example_positions
	@echo "Running example_positions..."
	@$(BIN_DIR)/example_positions

$(BIN_DIR)/example_markets: examples/simple_markets.c $(CORE_OBJS) $(TEST_HELPER_OBJS)
	@mkdir -p $(BIN_DIR)
	@echo "Building $@"
	@$(CC) $(CFLAGS) $< $(CORE_OBJS) $(TEST_HELPER_OBJS) -o $@ $(LDFLAGS) $(LIBS)

example_markets: $(BIN_DIR)/example_markets
	@echo "Running example_markets..."
	@$(BIN_DIR)/example_markets

$(BIN_DIR)/example_ticker: examples/simple_ticker.c $(CORE_OBJS) $(TEST_HELPER_OBJS)
	@mkdir -p $(BIN_DIR)
	@echo "Building $@"
	@$(CC) $(CFLAGS) $< $(CORE_OBJS) $(TEST_HELPER_OBJS) -o $@ $(LDFLAGS) $(LIBS)

example_ticker: $(BIN_DIR)/example_ticker
	@echo "Running example_ticker..."
	@$(BIN_DIR)/example_ticker

$(BIN_DIR)/example_orderbook: examples/simple_orderbook.c $(CORE_OBJS) $(TEST_HELPER_OBJS)
	@mkdir -p $(BIN_DIR)
	@echo "Building $@"
	@$(CC) $(CFLAGS) $< $(CORE_OBJS) $(TEST_HELPER_OBJS) -o $@ $(LDFLAGS) $(LIBS)

example_orderbook: $(BIN_DIR)/example_orderbook
	@echo "Running example_orderbook..."
	@$(BIN_DIR)/example_orderbook

# Clean
clean:
	rm -rf $(BUILD_DIR)
	@echo "✅ Build directory cleaned"

# Rebuild all
rebuild: clean test

